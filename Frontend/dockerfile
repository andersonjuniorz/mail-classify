# =========================================================================
# === ESTAGIO 1: BUILD DO APLICATIVO REACT ===
# Usa uma imagem Node.js para instalar dependencias e fazer o build do React
# =========================================================================
FROM node:20-alpine AS build-stage

# Define o diretorio de trabalho
WORKDIR /app

# Copia package.json e package-lock.json (para otimizacao de cache)
COPY package*.json ./

# Instala as dependencias Node.js
RUN npm install

# Copia o restante do codigo do frontend
COPY . .

# Faz o build do aplicativo React para producao
RUN npm run build

# =========================================================================
# -------------- ESTAGIO 2: SERVIR O APLICATIVO COM NGINX -----------------
# --Copia apenas os arquivos de build do React para uma imagem Nginx leve--
# =========================================================================
FROM nginx:alpine

# Remove configuracao padrao do Nginx (opcional, mas bom para limpar)
RUN rm -rf /etc/nginx/conf.d/*

# Copia a configuracao Nginx customizada
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copia os arquivos de build da aplicacao React do ESTAGIO 1
# 'build-stage' e o nome do estagio anterior
# '/app/dist' e onde 'npm run build' coloca os arquivos dentro do estagio 'build-stage'
COPY --from=build-stage /app/dist /usr/share/nginx/html

# Expoe a porta padrao do Nginx
EXPOSE 80

# Comando para iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"]